version: '2.3'

services:
  collect:
    image: ${DOCKER_REPOSITOR}/hzgc/collect:${VERSION}
    container_name: collect
    restart: always
    environment:
    - EUREKA_IP=${EUREKA_HOST_IP}
    - EUREKA_PORT=${EUREKA_HOST_PORT}
    - ZOOKEEPER_HOST=${ZK_HOST}:${ZK_PORT}
    network_mode: "host"
    extra_hosts:
    - platform:${PLATFORM_HOST}
    volumes:
    - ${DOCKER_HOME}/collect/log:/log

  peoman-worker:
    image: ${DOCKER_REPOSITOR}/hzgc/peoman-worker:${VERSION}
    container_name: peoman-worker
    environment:
    - EUREKA_IP=${EUREKA_HOST_IP}
    - EUREKA_PORT=${EUREKA_HOST_PORT}
    - KAFKA_HOST=${KAFKA_HOST}:${KAFKA_PORT}
    - ZOOKEEPER_HOST=${ZK_HOST}:${ZK_PORT}
    - COMPARE_NUMBER=3
    - BIT_THRESHOLD=10
    - FLOAT_THRESHOLD=90
    - FLOAT_NEW_THRESHOLD=73
    - FLOAT_COMPARE_OPEN=true
    - MYSQL_HOST=${MYSQL_HOST}:${MYSQL_PORT}
    extra_hosts:
    - platform:${PLATFORM_HOST}
    volumes:
    - /opt/GsFaceLib:/opt/GsFaceLib
    - ${DOCKER_HOME}/peoman-worker/log:/log

  dispatch-background:
    image: ${DOCKER_REPOSITOR}/hzgc/dispatch-background:${VERSION}
    container_name: dispatch-background
    environment:
    - EUREKA_IP=${EUREKA_HOST_IP}
    - EUREKA_PORT=${EUREKA_HOST_PORT}
    - KAFKA_HOST=${KAFKA_HOST}:${KAFKA_PORT}
    - MYSQL_HOST=${MYSQL_HOST}:${MYSQL_PORT}
    - LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/GsFaceLib/face_libs
    - MYSQL_USERNAME=${MYSQL_USERNAME}
    - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    extra_hosts:
    - platform:${PLATFORM_HOST}
    volumes:
    - /opt/GsFaceLib:/opt/GsFaceLib
    - ${DOCKER_HOME}/dispatch-background/log:/log

  kafka-parquet:
    image: ${DOCKER_REPOSITOR}/hzgc/spark:${VERSION}
    container_name: kafka-parquet
    command: /start-kafka-to-parquet.sh
    restart: always
    network_mode: "host"
    environment:
    - KAFKA_BROKER=${KAFKA_HOST}:${KAFKA_PORT}
    - ZK_ADDRESS=${ZK_HOST}:${ZK_PORT}
    - ES_NODE=${ES_HOST}
    extra_hosts:
    - platform:${PLATFORM_HOST}
    - ${DOCKER_HOST_NAME}:${DOCKER_HOST_IP}
    volumes:
#    - ${DOCKER_HOME}/spark/sparkJob.properties:/usr/spark-2.2.0/conf/sparkJob.properties
    - ${DOCKER_HOME}/spark/parquet:/parquet

  kafka-tidb:
    image: ${DOCKER_REPOSITOR}/hzgc/spark:${VERSION}
    container_name: kafka-tidb
    command: /start-kafka-to-tidb.sh
    restart: always
    network_mode: "host"
    extra_hosts:
    - platform:${PLATFORM_HOST}
    - ${DOCKER_HOST_NAME}:${DOCKER_HOST_IP}
    environment:
    - JDBC_IP=${MYSQL_HOST}
    - ZK_ADDRESS=${ZK_HOST}:${ZK_PORT}
    - KAFKA_BROKER=${KAFKA_HOST}:${KAFKA_PORT}
    - JDBC_PORT=${MYSQL_PORT}

  face-dynrepo:
    image: ${DOCKER_REPOSITOR}/hzgc/face-dynrepo:${VERSION}
    depends_on:
    - collect
    container_name: face-dynrepo
    restart: always
    environment:
    - EUREKA_IP=${EUREKA_HOST_IP}
    - EUREKA_PORT=${EUREKA_HOST_PORT}
    - ZOOKEEPER_HOST=${ZK_HOST}:${ZK_PORT}
    - ES_HOST=${ES_HOST}
    network_mode: "host"
    extra_hosts:
    - platform:${PLATFORM_HOST}
    volumes:
    - ${DOCKER_HOME}/face-dynrepo/log:/log

  person-dynrepo:
    image: ${DOCKER_REPOSITOR}/hzgc/person-dynrepo:${VERSION}
    depends_on:
    - collect
    container_name: person-dynrepo
    restart: always
    environment:
    - EUREKA_IP=${EUREKA_HOST_IP}
    - EUREKA_PORT=${EUREKA_HOST_PORT}
    - ZOOKEEPER_HOST=${ZK_HOST}:${ZK_PORT}
    - ES_HOST=${ES_HOST}
    network_mode: "host"
    extra_hosts:
    - platform:${PLATFORM_HOST}
    volumes:
    - ${DOCKER_HOME}/person-dynrepo/log:/log

  vehicle-dynrepo:
    image: ${DOCKER_REPOSITOR}/hzgc/vehicle-dynrepo:${VERSION}
    depends_on:
    - collect
    container_name: vehicle-dynrepo
    restart: always
    environment:
    - EUREKA_IP=${EUREKA_HOST_IP}
    - EUREKA_PORT=${EUREKA_HOST_PORT}
    - ZOOKEEPER_HOST=${ZK_HOST}:${ZK_PORT}
    - ES_HOST=${ES_HOST}
    network_mode: "host"
    extra_hosts:
    - platform:${PLATFORM_HOST}
    volumes:
    - ${DOCKER_HOME}/vehicle-dynrepo/log:/log

  people:
    image: ${DOCKER_REPOSITOR}/hzgc/people:${VERSION}
    depends_on:
    - collect
    container_name: people
    restart: always
    environment:
    - EUREKA_IP=${EUREKA_HOST_IP}
    - EUREKA_PORT=${EUREKA_HOST_PORT}
    - MYSQL_HOST=${MYSQL_HOST}:${MYSQL_PORT}
    - MYSQL_USERNAME=${MYSQL_USERNAME}
    - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    - KAFKA_HOST=${KAFKA_HOST}:${KAFKA_PORT}
    extra_hosts:
    - platform:${PLATFORM_HOST}
    network_mode: "host"
    volumes:
    - ${DOCKER_HOME}/people/log:/log

  dispatch:
    image: ${DOCKER_REPOSITOR}/hzgc/dispatch:${VERSION}
    depends_on:
    - collect
    container_name: dispatch
    network_mode: "host"
    environment:
    - EUREKA_IP=${EUREKA_HOST_IP}
    - EUREKA_PORT=${EUREKA_HOST_PORT}
    - MYSQL_HOST=${MYSQL_HOST}:${MYSQL_PORT}
    - MYSQL_USERNAME=${MYSQL_USERNAME}
    - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    - KAFKA_HOST=${KAFKA_HOST}:${KAFKA_PORT}
    extra_hosts:
    - platform:${PLATFORM_HOST}
    volumes:
    - ${DOCKER_HOME}/dispatch/log:/log

  imsi-dynrepo:
    image: ${DOCKER_REPOSITOR}/hzgc/imsi-dynrepo:${VERSION}
    depends_on:
    - collect
    container_name: imsi-dynrepo
    network_mode: "host"
    environment:
    - EUREKA_IP=${EUREKA_HOST_IP}
    - EUREKA_PORT=${EUREKA_HOST_PORT}
    - MYSQL_HOST=${MYSQL_HOST}:${MYSQL_PORT}
    - MYSQL_USERNAME=${MYSQL_USERNAME}
    - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    - KAFKA_HOST=${KAFKA_HOST}:${KAFKA_PORT}
    - ZOOKEEPER_HOST=${ZK_HOST}:${ZK_PORT}
    - QUERY_TIME=30
    extra_hosts:
    - platform:${PLATFORM_HOST}
    volumes:
    - ${DOCKER_HOME}/imsi-dynrepo/log:/log

  fusion:
    image: ${DOCKER_REPOSITOR}/hzgc/fusion:${VERSION}
    depends_on:
    - collect
    container_name: fusion
    restart: always
    environment:
    - EUREKA_IP=${EUREKA_HOST_IP}
    - EUREKA_PORT=${EUREKA_HOST_PORT}
    - ZOOKEEPER_HOST=${ZK_HOST}:${ZK_PORT}
    - MYSQL_HOST=${MYSQL_HOST}:${MYSQL_PORT}
    - QUERY_TIME=30
    - KAFKA_HOST=${KAFKA_HOST}:${KAFKA_PORT}
    network_mode: "host"
    extra_hosts:
    - platform:${PLATFORM_HOST}
    volumes:
    - ${DOCKER_HOME}/fusion/log:/log

  collect-ftp:
    image: ${DOCKER_REPOSITOR}/hzgc/collect-ftp:${VERSION}
    container_name: collect-ftp
    restart: always
    runtime: nvidia
    hostname: collect-ftp
    environment:
    - ZOOKEEPER_HOST=${ZK_HOST}:${ZK_PORT}
    - HOST_IP=${DOCKER_HOST_IP}
    - DETECTOR_NUMBER=6
    - KAFKA_HOST=${KAFKA_HOST}:${KAFKA_PORT}
    - SEEMMO_URL=http://${SEEMO_URL}:7000/ImgProcService/Recognize
    - HOME_DIR=/opt/ftpdata
    - BACKUP_DIR=/home/ftpdata
    - DETECTOR_ENABLE=true
    - EUREKA_IP=${EUREKA_HOST_IP}
    - EUREKA_PORT=${EUREKA_HOST_PORT}
    - LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/opt/GsFaceLib/face_libs
    network_mode: "host"
    extra_hosts:
    - platform:${PLATFORM_HOST}
    volumes:
    - ${DOCKER_HOME}/collect-ftp/log:/log
    - /opt/GsFaceLib:/opt/GsFaceLib
    - /lib64:/lib64
    - /opt/ftpdata:/opt/ftpdata
    - /home/ftpdata:/home/ftpdata

  facecompare:
    image: ${DOCKER_REPOSITOR}/hzgc/facecompare:${VERSION}
    container_name: facecompare
    restart: always
    environment:
    - ZK_ADDRESS=${ZK_HOST}:${ZK_PORT}
    - ES_HOST=${ES_HOST}
    - KAFKA_SERVERS=${KAFKA_HOST}:${KAFKA_PORT}
    network_mode: "host"
    volumes:
    - ${DOCKER_HOME}/facecompare/log:/worker/log
    - /opt/GsFaceLib:/opt/GsFaceLib
    - ${DOCKER_HOME}/facecompare/data:/worker/matedata