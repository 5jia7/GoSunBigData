<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hzgc.cloud.community.dao.OutPeopleMapper">
    <resultMap id="BaseResultMap" type="com.hzgc.cloud.community.model.OutPeople">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="peopleid" property="peopleid" jdbcType="VARCHAR"/>
        <result column="community" property="community" jdbcType="BIGINT"/>
        <result column="month" property="month" jdbcType="VARCHAR"/>
        <result column="isconfirm" property="isconfirm" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="CountResultMap" type="com.hzgc.cloud.community.model.CountCommunityPeople" >
        <result column="community" property="community" jdbcType="BIGINT" />
        <result column="count" property="count" jdbcType="INTEGER" />
    </resultMap>
    <sql id="Base_Column_List">
        id, peopleid, community, month, isconfirm
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from t_people_out
        where id = #{id,jdbcType=BIGINT}
    </select>
    <!--统计上月小区迁出人口数量（上月确认迁出数量）-->
    <select id="countOutPeople" resultType="java.lang.Integer" parameterType="java.lang.Long">
        select count(peopleid)
        from t_people_out
        where isconfirm = 2
        and DATE_FORMAT(now(), '%Y%m') = month
        and community = #{community,jdbcType=BIGINT}
    </select>
    <!--统计某小区某月总迁出数量-->
    <select id="countTotalOutPeople" resultMap="CountResultMap"
            parameterType="com.hzgc.cloud.community.param.NewAndOutPeopleCountDTO" >
        select community, count(peopleid) as count
        from (select distinct peopleid, community from t_people_out
        <where>
            <if test="month != null" >
                month = #{month,jdbcType=VARCHAR}
            </if>
            <if test="communityIdList != null and communityIdList.size() > 0" >
                and community in
                <foreach collection="communityIdList" item="model" open="(" close=")" separator=",">
                    #{model}
                </foreach>
            </if>
        </where>
        ) as temp_table
        group by community
    </select>
    <!--统计某小区某月确认迁出数量-->
    <select id="countConfirmOutPeople" resultMap="CountResultMap"
            parameterType="com.hzgc.cloud.community.param.NewAndOutPeopleCountDTO" >
        select community, count(peopleid) as count
        from t_people_out
        <where>
            isconfirm in (2, 3)
            <if test="month != null" >
                and month = #{month,jdbcType=VARCHAR}
            </if>
            <if test="communityIdList != null and communityIdList.size() > 0" >
                and community in
                <foreach collection="communityIdList" item="model" open="(" close=")" separator=",">
                    #{model}
                </foreach>
            </if>
        </where>
        group by community
    </select>
    <!--查询某小区某月迁出人员-->
    <select id="searchCommunityOutPeople" resultMap="BaseResultMap"
            parameterType="com.hzgc.cloud.community.param.NewAndOutPeopleSearchDTO" >
        select distinct peopleid, isconfirm
        from t_people_out
        <where>
            <if test="month != null" >
                month = #{month,jdbcType=VARCHAR}
            </if>
            <if test="communityId != null" >
                and community = #{communityId,jdbcType=BIGINT}
            </if>
            <if test="typeStatus == 1" >
                and isconfirm in (2, 3)
            </if>
            <if test="typeStatus == 2" >
                and isconfirm = 1
            </if>
        </where>
    </select>
    <!--更新 isconfirm 值-->
    <update id="updateIsconfirm" parameterType="com.hzgc.cloud.community.param.AffirmOperationDTO">
        update t_people_out
        <set>
            <if test="isconfirm != null">
                isconfirm = #{isconfirm,jdbcType=INTEGER},
            </if>
        </set>
        where peopleid = #{peopleId,jdbcType=BIGINT}
        and community = #{communityId,jdbcType=BIGINT}
        and month = #{month,jdbcType=VARCHAR}
    </update>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from t_people_out
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="delete" parameterType="java.lang.String">
        delete from t_people_out where peopleid = #{peopleid,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.hzgc.cloud.community.model.OutPeople">
        insert into t_people_out (id, peopleid, community,
        month, isconfirm)
        values (#{id,jdbcType=BIGINT}, #{peopleid,jdbcType=VARCHAR}, #{community,jdbcType=BIGINT},
        #{month,jdbcType=VARCHAR}, #{isconfirm,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.hzgc.cloud.community.model.OutPeople">
        insert into t_people_out
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="peopleid != null">
                peopleid,
            </if>
            <if test="community != null">
                community,
            </if>
            <if test="month != null">
                month,
            </if>
            <if test="isconfirm != null">
                isconfirm,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="peopleid != null">
                #{peopleid,jdbcType=VARCHAR},
            </if>
            <if test="community != null">
                #{community,jdbcType=BIGINT},
            </if>
            <if test="month != null">
                #{month,jdbcType=VARCHAR},
            </if>
            <if test="isconfirm != null">
                #{isconfirm,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.hzgc.cloud.community.model.OutPeople">
        update t_people_out
        <set>
            <if test="peopleid != null">
                peopleid = #{peopleid,jdbcType=VARCHAR},
            </if>
            <if test="community != null">
                community = #{community,jdbcType=BIGINT},
            </if>
            <if test="month != null">
                month = #{month,jdbcType=VARCHAR},
            </if>
            <if test="isconfirm != null">
                isconfirm = #{isconfirm,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.hzgc.cloud.community.model.OutPeople">
        update t_people_out
        set peopleid = #{peopleid,jdbcType=VARCHAR},
        community = #{community,jdbcType=BIGINT},
        month = #{month,jdbcType=VARCHAR},
        isconfirm = #{isconfirm,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>